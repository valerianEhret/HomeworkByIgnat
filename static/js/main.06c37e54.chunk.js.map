{"version":3,"sources":["components/Navbar/Navbar.module.css","components/PreJunior/Message/Message.module.css","components/InputNya.module.css","components/PreJunior/Activities/Activities.module.css","components/Junior/Junior.module.css","components/JuniorPlus/JuniorPlus.module.css","components/ButtonNya.module.css","components/PreJunior/PreJunior.module.css","components/Navbar/Navbar.tsx","components/Junior/Junior.tsx","components/JuniorPlus/JuniorPlus.tsx","components/PreJunior/Message/Message.tsx","components/PreJunior/Activities/Activities.tsx","components/InputNya.tsx","components/ButtonNya.tsx","components/PreJunior/List/List.tsx","components/PreJunior/PreJunior.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","className","classes","menu","menuBtn","menuList","link","to","Junior","img","src","alt","JuniorPlus","Message","props","wrapper","avatar","post","name","time","text","Activities","title","activities","map","a","key","id","list","onClick","removeActivity","n","value","scale","low","high","optimum","max","buttons","changeFilter","InputNya","onEnter","error","restProps","style","inputNya","onKeyPress","type","errorMessage","ButtonNya","buttonNya","List","useState","setValue","setError","onChange","e","currentTarget","trim","charCode","addName","greeting","names","el","removeNames","length","PreJunior","App","setNames","newNames","v1","filteredNames","filter","alert","setActivity","setFiler","filteredActivities","activitiesForActivities","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.06c37e54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Navbar_menu__2qE8B\",\"menuBtn\":\"Navbar_menuBtn__1BgoQ\",\"menuList\":\"Navbar_menuList__1VSrs\",\"link\":\"Navbar_link__2NQ9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__Vv4hj\",\"avatar\":\"Message_avatar__2E4f0\",\"post\":\"Message_post__2AFEt\",\"time\":\"Message_time__1xnlU\",\"name\":\"Message_name__1IPS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"InputNya_inputNya__P-RPb\",\"error\":\"InputNya_error__3IPtt\",\"errorMessage\":\"InputNya_errorMessage__2fM-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Activities_list__1dHJh\",\"title\":\"Activities_title__2SDtE\",\"buttons\":\"Activities_buttons__eprzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Junior_img__1Njl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"JuniorPlus_img__mAqsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNya\":\"ButtonNya_buttonNya__XVtLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PreJunior_wrapper__3-1d0\"};","import React from 'react';\r\nimport classes from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport function Navbar() {\r\n    return(\r\n        <div className={classes.menu}>\r\n            <a className={classes.menuBtn}></a>\r\n            <div className={classes.menuList}>\r\n                <div>\r\n                    <NavLink className={classes.link} to=\"/preJunior\">PreJunior</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink className={classes.link} to=\"/Junior\">Junior</NavLink>\r\n                </div>\r\n               <div>\r\n                   <NavLink className={classes.link}  to=\"/Junior+\">Junior+</NavLink>\r\n               </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport classes from \"./Junior.module.css\"\r\n\r\n\r\n\r\n\r\nexport function Junior() {\r\n    return(\r\n        <div>\r\n            <img className={classes.img} src=\"https://media.proglib.io/wp-uploads/2018/08/baby_javascript.png\" alt=\"baby with a laptop\"/>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport classes from \"./JuniorPlus.module.css\"\r\n\r\n\r\n\r\nexport function JuniorPlus() {\r\n    return(\r\n        <div>\r\n            <img className={classes.img} src=\"https://images-na.ssl-images-amazon.com/images/I/81he0j5spJL._SX600_.jpg\" alt=\"\"/>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from \"react\";\r\nimport classes from \"./Message.module.css\"\r\ntype MessagePropsType = {\r\n    name:string\r\n    text:string\r\n    time: string\r\n}\r\n\r\n\r\n\r\nexport function Message(props:MessagePropsType) {\r\n    debugger\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.avatar}>\r\n                <img src=\"https://media.gettyimages.com/vectors/software-language-programmer-avatar-vector-id861342502\" alt=\"avatar\" />\r\n            </div>\r\n            <div className={classes.post}>\r\n                <div className={classes.name}>{props.name}</div>\r\n                <div className={classes.time}>{props.time}</div>\r\n                <div className={classes.text}>{props.text}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport classes from \"./Activities.module.css\"\r\nimport {FilterValuesType} from \"../../../App\";\r\n\r\nexport type TasksType = {\r\n    id: string\r\n    n: string\r\n    scale: number\r\n}\r\n\r\ntype PropsType = {\r\n    activities: Array<TasksType>\r\n    removeActivity: (id:string) => void\r\n    changeFilter: (value:FilterValuesType) => void\r\n}\r\n\r\nexport function Activities(props: PropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.title}>\r\n                <h3>Acitivities</h3>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        props.activities.map(a =>\r\n                            <li key={a.id} className={classes.list}>\r\n                                <button onClick={ () => {props.removeActivity(a.id)}}>X</button>\r\n                                <b>{a.n}</b>\r\n                               <meter value={a.scale} low={4} high={7} optimum={9} max={10}></meter><sup>priority</sup>\r\n\r\n                            </li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className={classes.buttons}>\r\n                <button onClick={ () => {props.changeFilter(\"all\")}  }>all</button>\r\n                <button onClick={ () => {props.changeFilter(\"low\")} }>low</button>\r\n                <button onClick={ () => {props.changeFilter(\"middle\")} }>middle</button>\r\n                <button onClick={ () => {props.changeFilter(\"hight\")}  }>hight</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};","import React, {DetailedHTMLProps, InputHTMLAttributes, useState, KeyboardEvent} from 'react';\r\nimport classes from \"./InputNya.module.css\"\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: (e: KeyboardEvent<HTMLInputElement>) => void, error?: string };\r\n\r\nexport function InputNya(props: InputNyaPropsType) {\r\n    const {onEnter, error, ...restProps} = props;\r\n    const style = props.error ? `${classes.inputNya} ${classes.error}` : `${classes.inputNya}`\r\n    return (\r\n        <>\r\n            <input onKeyPress={props.onEnter}   className={style}  {...restProps} type=\"text\"/>\r\n            <span className={classes.errorMessage}>{error}</span>\r\n        </>\r\n    );\r\n};","import React, {ButtonHTMLAttributes, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react';\r\nimport classes from \"./ButtonNya.module.css\"\r\nimport {InputNyaPropsType} from \"./InputNya\";\r\n\r\n\r\ntype ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\n\r\nexport function ButtonNya (props: ButtonNyaPropsType) {\r\n\r\n\r\n    return (\r\n        <>\r\n           <button className={classes.buttonNya}{...props} >add new student</button>\r\n        </>\r\n    );\r\n};","import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\r\nimport {InputNya} from \"../../InputNya\";\r\nimport {ButtonNya} from \"../../ButtonNya\";\r\n\r\n\r\nexport type NamesType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\ntype ListPropsType = {\r\n    names: Array<NamesType>\r\n    removeNames: (id: string) => void\r\n    addName: (value: string) => void\r\n    greeting: (value: string) => void\r\n}\r\n\r\nexport function List(props: ListPropsType) {\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [error, setError] = useState<string>(\"\")\r\n\r\n\r\n    const onChangeHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n        setError(\"\")\r\n\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        if (value.trim() !== \"\") {\r\n            props.addName(value)\r\n            setValue(\"\")\r\n            props.greeting(value)\r\n        } else {\r\n            setError(\"Title is requaried\")\r\n        }\r\n    }\r\n\r\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n        if (value.trim() !== \"\") {\r\n            if (e.charCode === 13) {\r\n                props.addName(value);\r\n                setValue(\"\");\r\n            }\r\n        } else {\r\n            setError(\"Title is requaried\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>List of students</h3>\r\n            </div>\r\n            <div>\r\n                <InputNya type=\"text\"\r\n                          value={value}\r\n                          onChange={onChangeHandler}\r\n                          error={error}\r\n                          onEnter={onEnter}\r\n                />\r\n                <ButtonNya onClick={onClickHandler}/>\r\n            </div>\r\n            <div>\r\n                <ul>{props.names.map(el =>\r\n                    <li key={el.id}>\r\n                        <button onClick={() => {\r\n                            props.removeNames(el.id)\r\n                        }}>\r\n                            kick\r\n                        </button>\r\n                        {el.name}\r\n                    </li>)}\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <span>Number of students:{props.names.length}</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Message} from \"./Message/Message\";\r\nimport {Activities, TasksType} from \"./Activities/Activities\"\r\nimport {List, NamesType} from \"./List/List\";\r\nimport {FilterValuesType} from \"../../App\";\r\nimport classes from \"./PreJunior.module.css\"\r\n\r\n\r\ntype PreJuniorPropsType = {\r\n    activities: Array<TasksType>\r\n    removeActivity: (id: string) => void\r\n    changeFilter: (value: FilterValuesType) => void\r\n    names: Array<NamesType>\r\n    removeNames: (id: string) => void\r\n    addName: (value: string) => void\r\n    greeting: (value: string) => void\r\n\r\n}\r\n\r\n\r\nexport function PreJunior(props: PreJuniorPropsType) {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={\"Activity\"}>\r\n                <Activities\r\n                    activities={props.activities}\r\n                    removeActivity={props.removeActivity}\r\n                    changeFilter={props.changeFilter}\r\n                />\r\n            </div>\r\n            <div>\r\n                <List names={props.names}\r\n                      removeNames={props.removeNames}\r\n                      addName={props.addName}\r\n                      greeting={props.greeting}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Message name={\"Valerian Ehret\"} text={\"Lorem ipsum dolor sit amet, \"} time={\"12:05\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TasksType} from \"./components/PreJunior/Activities/Activities\"\r\nimport {v1} from \"uuid\";\r\nimport {NamesType} from \"./components/PreJunior/List/List\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {Junior} from \"./components/Junior/Junior\";\r\nimport {JuniorPlus} from \"./components/JuniorPlus/JuniorPlus\";\r\nimport {PreJunior} from \"./components/PreJunior/PreJunior\";\r\n\r\n\r\n\r\nexport type FilterValuesType = \"all\" | \"low\" | \"middle\" | \"hight\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    let [names,setNames ] = useState<Array<NamesType>>(\r\n        []);\r\n\r\n\r\n    function addName(value:string) {\r\n        let newName = {id:v1(), name: value};\r\n        let newNames = [newName, ...names];\r\n        setNames(newNames)\r\n    }\r\n\r\n    function removeNames(id:string) {\r\n        let filteredNames = names.filter( el => el.id !== id)\r\n        setNames(filteredNames);\r\n    }\r\n\r\n    function greeting(value:string) {\r\n        alert(\"Welcome  \" + value + \" !!!\" )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  let [activities, setActivity] = useState<Array<TasksType>>([\r\n    { id: v1(), n: \"job\",scale:6 },\r\n    { id: v1(), n: \"party\",scale:6 },\r\n    { id: v1(), n: \"games\", scale:2 },\r\n    { id: v1(), n: \"react\", scale: 10 },\r\n    { id: v1(), n: \"html\", scale: 5 },\r\n    { id: v1(), n: \"js\", scale: 8 },\r\n    { id: v1(), n: \"family\",scale: 10 },\r\n  ]);\r\n\r\n  let [filter, setFiler] = useState<FilterValuesType>(\"all\")\r\n\r\n   function removeActivity(id:string) {\r\n     let filteredActivities = activities.filter( a => a.id !== id)\r\n     setActivity(filteredActivities)\r\n   }\r\n\r\n   function changeFilter(value:FilterValuesType) {\r\n    setFiler(value);\r\n   }\r\n\r\n\r\n   let activitiesForActivities = activities;\r\n   if (filter === \"low\") {\r\n     activitiesForActivities = activities.filter( a => a.scale >= 0 && a.scale <=3 );\r\n   }\r\n   if (filter === \"middle\") {\r\n     activitiesForActivities = activities.filter( a => a.scale >= 4 && a.scale <=6 );\r\n   }\r\n   if (filter === \"hight\") {\r\n     activitiesForActivities = activities.filter( a => a.scale >= 7 && a.scale <=10 );\r\n   }\r\n\r\n  return (\r\n      <HashRouter>\r\n          <div className=\"App\">\r\n              <div><Navbar/></div>\r\n              <Route path=\"/preJunior\" render={ () =>   <PreJunior\r\n                  activities={activitiesForActivities}\r\n                  removeActivity = {removeActivity}\r\n                  changeFilter={changeFilter}\r\n                  names={names}\r\n                  removeNames={removeNames}\r\n                  addName={addName}\r\n                  greeting={greeting}\r\n              />}/>\r\n              <Route path=\"/Junior\" render={ () => <Junior/>} />\r\n              <Route path=\"/Junior+\" render={ () => <JuniorPlus/> }/>\r\n\r\n          </div>\r\n      </HashRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}